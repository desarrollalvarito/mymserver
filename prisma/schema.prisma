generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Person {
  id        Int       @id @default(autoincrement())
  run       String?   @unique(map: "run") @db.VarChar(50)
  names     String    @db.VarChar(50)
  lastName  String?   @db.VarChar(50)
  gender    Gender    @default(OTHER)
  address   String?   @db.VarChar(250)
  contact   String?   @db.VarChar(50)
  birthdate DateTime? @db.Date
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  client    Client?
  employee  Employee?
  user      User?
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique(map: "username") @db.VarChar(255)
  email    String? @unique(map: "email") @db.VarChar(255)
  password String  @db.VarChar(255)
  personId Int     @unique
  person   Person  @relation(fields: [personId], references: [id])
}

model Client {
  id              Int     @id @default(autoincrement())
  shippingAddress String  @db.VarChar(100)
  billName        String? @db.VarChar(100)
  rut             String? @unique @db.VarChar(100)
  personId        Int     @unique
  person          Person  @relation(fields: [personId], references: [id])
  order           Order[]
}

model Employee {
  id        Int      @id @default(autoincrement())
  jobRole   JobRoles @default(COOK)
  workShift String   @db.VarChar(50)
  state     State    @default(ACTIVE)
  personId  Int      @unique
  person    Person   @relation(fields: [personId], references: [id])
}

model Subsidiary {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(50)
  description String   @db.VarChar(150)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userAt      Int
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(50)
  price        Decimal        @db.Decimal(10, 0)
  state        State          @default(ACTIVE)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  userAt       Int
  orderProduct OrderProduct[]
  stock        Stock?
}

model Order {
  id           Int            @id @default(autoincrement())
  date         DateTime       @db.Date
  state        OrderState     @default(PENDING)
  clientId     Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  userAt       Int
  client       Client         @relation(fields: [clientId], references: [id])
  orderProduct OrderProduct[]
  sale         Sale?

  @@index([clientId], map: "Order_clientId_fkey")
}

model OrderProduct {
  id        Int      @id @default(autoincrement())
  productId Int
  orderId   Int
  quantity  Int
  aditional Boolean  @default(false)
  state     State    @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userAt    Int
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@index([orderId], map: "OrderProduct_orderId_fkey")
  @@index([productId], map: "OrderProduct_productId_fkey")
}

model Sale {
  id          Int      @id @default(autoincrement())
  date        DateTime @db.Date
  totalAmount Decimal  @db.Decimal(10, 0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userAt      Int
  orderId     Int      @unique
  order       Order    @relation(fields: [orderId], references: [id])
}

model Stock {
  id            Int      @id @default(autoincrement())
  initialAmount Int
  currentAmount Int
  date          DateTime @db.Date
  productId     Int      @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userAt        Int
  product       Product  @relation(fields: [productId], references: [id])
}

model Supply {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userAt    Int
}

model DailyQuota {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userAt    Int
}

model DataSettings {
  id         Int      @id @default(autoincrement())
  table      String   @db.VarChar(50)
  field      String   @db.VarChar(50)
  properties String   @db.LongText
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userAt     Int
}

enum JobRoles {
  MANAGER
  ADMINISTRATOR
  COOK
  DELIVERY
  CASHIER
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum OrderState {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum State {
  ACTIVE
  INACTIVE
}