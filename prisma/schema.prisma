generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Person {
  id        Int       @id @default(autoincrement())
  run       String?   @unique @db.VarChar(50)
  names     String    @db.VarChar(50)
  lastName  String?   @db.VarChar(50)
  gender    String?   @db.Char(1)
  address   String?   @db.VarChar(250)
  contact   String?   @db.VarChar(50)
  birthdate DateTime? @db.Date
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  client    Client?
  employee  Employee?
  user      User?
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique @db.VarChar(255)
  email    String? @unique @db.VarChar(255)
  password String  @db.VarChar(255)
  person   Person  @relation(fields: [personId], references: [id])
  personId Int     @unique
}

model Client {
  id              Int     @id @default(autoincrement())
  shippingAddress String  @db.VarChar(100)
  billName        String? @db.VarChar(100)
  rut             String? @db.VarChar(100) @unique
  personId        Int     @unique
  person          Person  @relation(fields: [personId], references: [id])
  order           Order?
}

model Employee {
  id        Int     @id @default(autoincrement())
  jobRole   String  @db.VarChar(50)
  workShift String  @db.VarChar(50)
  personId  Int     @unique
  person    Person  @relation(fields: [personId], references: [id])
}

model Subsidiary {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(50)
  description String   @db.VarChar(150)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userAt      Int
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(50)
  price        Decimal       @db.Decimal(10, 0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userAt       Int
  orderProduct OrderProduct[]
  stock        Stock?
  dailyQuota   DailyQuota[]
}

model Order {
  id        Int      @id @default(autoincrement())
  date      DateTime @db.Date
  clientId  Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userAt    Int
  client    Client   @relation(fields: [clientId], references: [id])
  orderProduct OrderProduct[]
  sale      Sale?
}

model OrderProduct {
  id        Int      @id @default(autoincrement())
  productId Int
  orderId   Int
  quantity  Int
  extra     Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userAt    Int
  product   Product  @relation(fields: [productId], references: [id])
  order     Order    @relation(fields: [orderId], references: [id])
}

model Sale {
  id          Int           @id @default(autoincrement())
  date        DateTime      @db.Date
  totalAmount Decimal       @db.Decimal(10, 0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userAt      Int
  orderId     Int           @unique
  order       Order         @relation(fields: [orderId], references: [id])
}

model Stock {
  id            Int      @id @default(autoincrement())
  initialAmount Int
  currentAmount Int
  date          DateTime @db.Date
  productId     Int      @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userAt        Int
  product       Product  @relation(fields: [productId], references: [id])
}

model Role {
  id Int @id @default(autoincrement())
}

model Supply {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userAt    Int
}

model DailyQuota {
  id        Int      @id @default(autoincrement())
  date      DateTime @db.Date
  quota     Int
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userAt    Int
}

model DataSettings {
  id         Int      @id @default(autoincrement())
  table      String   @db.VarChar(50)
  field      String   @db.VarChar(50)
  properties String   @db.LongText
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userAt     Int
}